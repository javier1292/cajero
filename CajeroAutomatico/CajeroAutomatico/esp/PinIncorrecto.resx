<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>